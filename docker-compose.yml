services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: lifeadmin
      POSTGRES_USER: lifeadmin
      POSTGRES_PASSWORD: lifeadmin
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lifeadmin"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "timeout", "5", "bash", "-c", "echo > /dev/tcp/localhost/6333"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://lifeadmin:lifeadmin@postgres:5432/lifeadmin
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-encryption-key-here}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-your-client-id}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-your-client-secret}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-http://localhost:8000/auth/google/callback}
      - APP_JWT_SECRET=${APP_JWT_SECRET:-dev-secret}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL:-http://localhost:3000}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-AIzaSyDRPAG8FyY2imcFN7C3tREa6RtIEW8frrI}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    volumes:
      - ./api:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://lifeadmin:lifeadmin@postgres:5432/lifeadmin
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-encryption-key-here}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-your-client-id}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-your-client-secret}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI:-http://localhost:8000/auth/google/callback}
      - APP_JWT_SECRET=${APP_JWT_SECRET:-dev-secret}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - NEXT_PUBLIC_FRONTEND_URL=${NEXT_PUBLIC_FRONTEND_URL:-http://localhost:3000}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-AIzaSyDRPAG8FyY2imcFN7C3tREa6RtIEW8frrI}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./api:/app
    command: celery -A celery_app.celery worker --loglevel=info

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
  redis_data:
  qdrant_data:

